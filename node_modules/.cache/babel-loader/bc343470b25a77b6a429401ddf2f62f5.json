{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/Fish.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon, Grid } from 'semantic-ui-react';\nimport TopHeader from \"./TopHeader\";\nimport FlexGrid from \"./FlexGrid\";\nimport { gS } from '../gSession';\n\nclass ThinRightGridLayout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: 'ThinRightGrid',\n      conf: {\n        fatSize: 13,\n        thinSize: 3\n      }\n    };\n  }\n\n  // call the getLayout function from gSession, to get the fatsize and thinsize, and setstate for fatsize and thinsize.\n  // we get rows and cloumn for all the flexGrid, and pass to the \n  // and we pass the the fatsize and thin size to the grid.column..\n  componentDidMount() {\n    var c = this.props.conf;\n\n    if (c) {\n      this.setState({\n        conf: c\n      });\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps != this.props) {\n      var c = this.props.conf;\n\n      if (c) {\n        this.setState({\n          conf: c\n        });\n      }\n    }\n  }\n\n  fatThinner() {\n    var c = this.state.conf;\n    c.fatSize = c.fatSize - 1;\n    c.thinSize = c.thinSize + 1;\n    this.setState({\n      conf: c\n    }); //\tthis.setState({ fatSize : this.state.fatSize-1})\n    //\tthis.setState({thinSize : this.state.thinSize+1})\n    //call setlayout to update the fatsize/thinsize\n\n    var l = {\n      name: this.state.name,\n      conf: c\n    };\n    gS.setLayout(l);\n  }\n\n  fatFatter() {\n    var c = this.state.conf;\n    c.fatSize = c.fatSize + 1;\n    c.thinSize = c.thinSize - 1;\n    this.setState({\n      conf: c\n    });\n    var l = {\n      name: this.state.name,\n      conf: c\n    };\n    gS.setLayout(l); //\tthis.setState({fatSize : this.state.fatSize+1})\n    //\tthis.setState({thinSize : this.state.thinSize-1})\n    // call setLayout to update the fat/thinsize\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"arrow alternate circle left\",\n      onClick: this.fatThinner.bind(this),\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"arrow alternate circle right\",\n      onClick: this.fatFatter.bind(this),\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      fluid: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: this.state.conf.fatSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(FlexGrid, {\n      curUser: this.props.curUser,\n      appState: this.props.appState,\n      updateFishState: this.props.updateFishState,\n      rows: 2,\n      cols: 2,\n      gridID: 0,\n      sessionSeq: this.props.sessionSeq,\n      containerWidth: this.state.conf.fatSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: this.state.conf.thinSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(FlexGrid, {\n      curUser: this.props.curUser,\n      appState: this.props.appState,\n      updateFishState: this.props.updateFishState,\n      rows: 3,\n      cols: 1,\n      gridID: 1,\n      sessionSeq: this.props.sessionSeq,\n      containerWidth: this.state.conf.thinSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 3\n      }\n    }))));\n  }\n\n}\n\nclass Fish extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      layoutName: 'ThinRightGrid',\n      layoutConf: {\n        fatSize: 9,\n        thinSize: 7\n      }\n    };\n  }\n\n  restoreLayout() {\n    var layout = gS.getLayout();\n    this.setState({\n      layoutName: layout.name\n    });\n    this.setState({\n      layoutConf: layout.conf\n    });\n  }\n\n  componentDidMount() {\n    this.restoreLayout();\n  }\n\n  componentDidUpdate(oldProps) {\n    return; // if (oldProps.sessionSeq < this.props.sessionSeq){\n    //     this.restoreLayout()\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TopHeader, {\n      curUser: this.props.curUser,\n      uName: this.props.curUser.name,\n      updateAppState: this.props.updateAppState,\n      appKey: \"curUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 3\n      }\n    }), this.state.layoutName == 'ThinRightGrid' && /*#__PURE__*/React.createElement(ThinRightGridLayout, {\n      curUser: this.props.curUser,\n      updateFishState: this.props.updateFishState,\n      appState: this.props.appState,\n      conf: this.state.layoutConf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default Fish;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/Fish.js"],"names":["React","Icon","Grid","TopHeader","FlexGrid","gS","ThinRightGridLayout","Component","state","name","conf","fatSize","thinSize","componentDidMount","c","props","setState","componentDidUpdate","oldProps","fatThinner","l","setLayout","fatFatter","render","bind","curUser","appState","updateFishState","sessionSeq","Fish","layoutName","layoutConf","restoreLayout","layout","getLayout","updateAppState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Icon, Grid} from 'semantic-ui-react'\nimport TopHeader from \"./TopHeader\"\nimport FlexGrid from \"./FlexGrid\"\nimport {gS} from '../gSession'\n\nclass ThinRightGridLayout extends React.Component{\n    state = {\n\tname : 'ThinRightGrid',\n\tconf : {\n\t    fatSize : 13,\n\t    thinSize :  3\n\t},\n    }\n\t\n\t// call the getLayout function from gSession, to get the fatsize and thinsize, and setstate for fatsize and thinsize.\n\t// we get rows and cloumn for all the flexGrid, and pass to the \n    // and we pass the the fatsize and thin size to the grid.column..\n\n    componentDidMount(){\n\tvar c = this.props.conf\n\tif (c){\n\t    this.setState({conf : c})\n\t}\n    }\n    componentDidUpdate(oldProps){\n\tif (oldProps != this.props){\n\t    var c = this.props.conf\n\t    if (c){\n\t\tthis.setState({conf : c})\n\t    }\n\t}\n    }\n\n    fatThinner(){\n\tvar c = this.state.conf\n\tc.fatSize = c.fatSize -1\n\tc.thinSize = c.thinSize +1\n\tthis.setState({ conf : c})\n//\tthis.setState({ fatSize : this.state.fatSize-1})\n//\tthis.setState({thinSize : this.state.thinSize+1})\n\t//call setlayout to update the fatsize/thinsize\n\n\tvar l = {\n\t    name : this.state.name,\n\t    conf : c\n\t}\n\tgS.setLayout(l)\n    }\n\n    fatFatter(){\n\tvar c = this.state.conf\n\tc.fatSize = c.fatSize+1\n\tc.thinSize = c.thinSize -1\n\tthis.setState({ conf : c})\n\tvar l = {\n\t    name : this.state.name,\n\t    conf : c\n\t}\n\tgS.setLayout(l)\n\t\n//\tthis.setState({fatSize : this.state.fatSize+1})\n//\tthis.setState({thinSize : this.state.thinSize-1})\n\t// call setLayout to update the fat/thinsize\n    }\n       render() {\n\treturn (\n\t\t<div>\n\t\t<Icon name = 'arrow alternate circle left' onClick={this.fatThinner.bind(this)}\n\t\tsize = 'large'/>\n\t\t<Icon name = 'arrow alternate circle right' onClick={this.fatFatter.bind(this)}\n\t\tsize = 'large'/>\n\t\t\n\t\t<Grid columns={2} fluid = \"true\" >\n\t\t<Grid.Column width={this.state.conf.fatSize}>\n\t\t<FlexGrid curUser = {this.props.curUser}\n\t    appState = {this.props.appState}\n\t    updateFishState = {this.props.updateFishState}\n\t    rows={2} cols = {2}\n\t    gridID = {0}\n\t    sessionSeq = {this.props.sessionSeq}\n\t    containerWidth={this.state.conf.fatSize}\n\t\t/>\n\n\t    \n\t\t</Grid.Column>\n\t\t<Grid.Column width={this.state.conf.thinSize}>\n\t\t<FlexGrid curUser = {this.props.curUser}\n\t    appState = {this.props.appState}\n            updateFishState = {this.props.updateFishState}\n\t    rows={3} cols = {1}\n\t    gridID = {1}\n\t    sessionSeq = {this.props.sessionSeq}\n\t    containerWidth={this.state.conf.thinSize}\n\t\t/>\n\t\t</Grid.Column>\n\n\t    </Grid>\n\t\t</div>\n\t)\n    }\n}\n\n\nclass Fish extends React.Component{\n    // we receive curUser as a prop\n    // compententdidmount()\n\n    state  = {\n\tlayoutName : 'ThinRightGrid',\n\tlayoutConf : {\n\t    fatSize : 9,\n\t    thinSize: 7\n\t}\n    }\n\n    restoreLayout(){\n\tvar layout = gS.getLayout()\n\tthis.setState({layoutName : layout.name })\n\tthis.setState({layoutConf : layout.conf })\n\n    }\n    \n     componentDidMount(){\n\tthis.restoreLayout()\n    }\n\n    componentDidUpdate(oldProps){\n\treturn;\n\t// if (oldProps.sessionSeq < this.props.sessionSeq){\n\t//     this.restoreLayout()\n\t// }\n    }\n\n\n    \n     render(){\n\n\treturn(\n\t\t<div>\n\t\t<TopHeader curUser={this.props.curUser} uName = {this.props.curUser.name} \n\t    updateAppState = {this.props.updateAppState} appKey = {\"curUser\"} />\n\t\t\n\t    {this.state.layoutName == 'ThinRightGrid' &&\n\t     <ThinRightGridLayout curUser = {this.props.curUser}\n             updateFishState = {this.props.updateFishState}\n             appState = {this.props.appState}\n\t     conf = {this.state.layoutConf}\n\t     />\n\t    }\n\t\t</div>\n\t)\t\n    }\n}\n\nexport default Fish;\n\n"]},"metadata":{},"sourceType":"module"}