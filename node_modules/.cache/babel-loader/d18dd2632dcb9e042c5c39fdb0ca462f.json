{"ast":null,"code":"import _classCallCheck from\"/Users/yimeng/Documents/fish/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yimeng/Documents/fish/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yimeng/Documents/fish/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yimeng/Documents/fish/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'semantic-ui-css/semantic.min.css';import{Container,Header,Loader,List,Divider}from'semantic-ui-react';import axios from'axios';var Poetry=/*#__PURE__*/function(_React$Component){_inherits(Poetry,_React$Component);var _super=_createSuper(Poetry);function Poetry(){var _this;_classCallCheck(this,Poetry);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={title:\"Poetry\",titleColor:\"red\",poetryData:null,loadPoetry:true,poetryTitle:null,refreshSeq:0};return _this;}_createClass(Poetry,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.setTitle(this.state.title,this.state.titleColor);this.props.noMenu(false);this.getPoetry();this.props.setError(false);this.props.setRefresh(\"grey\",false);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(oldProps){if(oldProps.triggerRefresh<this.props.triggerRefresh){this.refreshPoetry();}}},{key:\"updatePoetry\",value:function updatePoetry(data){console.log(\"the poetry data is\"+data);this.setState({poetryData:data});this.setState({loadPoetry:false});var pTitle=this.state.poetryData.title;this.setState({poetryTitle:pTitle});this.props.setTitle(pTitle,this.state.titleColor);}},{key:\"getPoetry\",value:function getPoetry(){var _this2=this;var pURL=\"https://poetrydb.org/random,linecount/1;5\";//https://poetrydb.org/random`\naxios.get(pURL).then(function(res){_this2.updatePoetry(res.data[0]);});}},{key:\"refreshPoetry\",value:function refreshPoetry(){this.props.setRefresh(\"red\",true);this.updateTitleColor(\"orange\");this.setState({loadPoetry:true});this.getPoetry();if(this.state.poetryData!=null){this.setState({loadPoetry:false});this.props.setError(false);}setTimeout(this.resetRefreshColor.bind(this),3000);}},{key:\"resetRefreshColor\",value:function resetRefreshColor(){this.updateTitleColor(this.state.titleColor);this.props.setRefresh(\"grey\",false);}},{key:\"updateTitleColor\",value:function updateTitleColor(c){this.props.setTitle(this.state.poetryTitle,c);}},{key:\"render\",value:function render(){var scrollStyle={width:\"100%\",height:\"300px\",overflowY:\"auto\",overflowX:\"auto\"// the image is from \"pexels.com\"\n//backgroundImage:\"url('https://images.pexels.com/photos/907485/pexels-photo-907485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\"\n};var poetryInfo=this.state.poetryData;if(!this.state.loadPoetry){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,{style:scrollStyle,text:true,textAlign:\"left\",fluid:true},/*#__PURE__*/React.createElement(Divider,{hidden:true}),/*#__PURE__*/React.createElement(Header,{as:\"h3\"},\" Author: \",poetryInfo.author),/*#__PURE__*/React.createElement(List,{style:scrollStyle},poetryInfo.lines.map(function(line,index){return/*#__PURE__*/React.createElement(\"p\",{key:index},line);}))));}else{return/*#__PURE__*/React.createElement(Loader,{active:this.state.loadPoetry,inline:\"centered\"});}}}]);return Poetry;}(React.Component);export default Poetry;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/Poetry.js"],"names":["React","Container","Header","Loader","List","Divider","axios","Poetry","state","title","titleColor","poetryData","loadPoetry","poetryTitle","refreshSeq","props","setTitle","noMenu","getPoetry","setError","setRefresh","oldProps","triggerRefresh","refreshPoetry","data","console","log","setState","pTitle","pURL","get","then","res","updatePoetry","updateTitleColor","setTimeout","resetRefreshColor","bind","c","scrollStyle","width","height","overflowY","overflowX","poetryInfo","author","lines","map","line","index","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Container, Header, Loader, List, Divider } from 'semantic-ui-react'\nimport axios from 'axios'\n\nclass Poetry extends React.Component {\n    state={\n        title: \"Poetry\",\n        titleColor: \"red\",\n        poetryData: null,\n        loadPoetry: true, \n        poetryTitle: null,\n        refreshSeq : 0,\n    }\n\n    componentDidMount(){\n        this.props.setTitle(this.state.title, this.state.titleColor)\n\t    this.props.noMenu(false)\n        this.getPoetry()\n        this.props.setError(false)\n\t    this.props.setRefresh(\"grey\", false)\n    }\n\n    componentDidUpdate(oldProps){\n        if (oldProps.triggerRefresh < this.props.triggerRefresh){\n            this.refreshPoetry()\n        }\n        }\n\n    updatePoetry(data){\n        console.log(\"the poetry data is\" + data)\n        this.setState({poetryData: data})\n        this.setState({loadPoetry: false})\n        let pTitle = this.state.poetryData.title\n        this.setState({poetryTitle: pTitle})\n        this.props.setTitle(pTitle, this.state.titleColor)\n    }\n\n    getPoetry(){\n    let pURL = \"https://poetrydb.org/random,linecount/1;5\"\n\t//https://poetrydb.org/random`\n        axios.get(pURL)\n            .then(res => {\n                this.updatePoetry(res.data[0])\n            })\n    }\n\n    refreshPoetry(){\n        this.props.setRefresh(\"red\", true)\n        this.updateTitleColor(\"orange\")\n        this.setState({loadPoetry: true})\n        this.getPoetry()\n        if (this.state.poetryData != null){\n            this.setState({loadPoetry: false})\n            this.props.setError(false)\n\n        }\n        setTimeout(this.resetRefreshColor.bind(this), 3000)\n    }\n\n    resetRefreshColor(){\n        this.updateTitleColor(this.state.titleColor)\n        this.props.setRefresh(\"grey\", false)\n    }\n    updateTitleColor(c){\n        this.props.setTitle(this.state.poetryTitle, c)\n    }\n\n    render(){\n        let scrollStyle={\n            width: \"100%\",\n            height: \"300px\",\n            overflowY: \"auto\",\n            overflowX: \"auto\",\n            // the image is from \"pexels.com\"\n            //backgroundImage:\"url('https://images.pexels.com/photos/907485/pexels-photo-907485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\"\n        }\n        let poetryInfo = this.state.poetryData\n        if (!this.state.loadPoetry){\n            return (\n                <div>\n                    <Container style={scrollStyle} text textAlign='left' fluid >\n                        <Divider hidden/>\n                        <Header as=\"h3\"> Author: {poetryInfo.author}</Header>\n                        <List style={scrollStyle}>{poetryInfo.lines.map((line, index) => <p key={index}>{line}</p>)}</List>\n                    </Container>\n                </div>\n            )\n        }\n        else {\n           return (<Loader active={this.state.loadPoetry} inline=\"centered\" />) \n        }\n\n    } \n\n}\nexport default Poetry;\n"]},"metadata":{},"sourceType":"module"}