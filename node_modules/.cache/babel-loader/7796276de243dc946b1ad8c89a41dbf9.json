{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/Login.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css'; // import axios from 'axios';\n\nimport Register from \"./Register\";\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { bS } from '../BabyTalk';\nimport { gS } from '../gSession';\n\nclass LoginDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _userName: null,\n      _passWord: null,\n      Message: null,\n      inError: false\n    };\n    this.localChange = this.handleChange.bind(this);\n    this.localSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault(); // don't reload the page\n\n    let uData = {\n      userName: this.state._userName,\n      passWord: this.state._passWord\n    }; // axios.post('/loginVerify', uData)\n    //     .then(res => {                // and add it to the post\n    // \t// we want to update the App state!!\n    // \t// this component wants to update App's curUser\n    // \tif (res.data.id === -1) {\n    // \t    this.setState({Message :  \"Login failure\"})\n    // \t    this.setState({inError : true})\n    // \t}\n    // \telse {\n    // \t    this.props.updateAppState(this.props.appKey, res.data);\n    // \t}\n    //     }).catch(err => {\n    // \tconsole.log(err)\n    //     })\n\n    var data = await bS.send('/loginVerify', uData); // talks to the babyServer\n\n    if (data.id === -1) {\n      this.setState({\n        Message: \"Login failure\"\n      });\n      this.setState({\n        inError: true\n      });\n    } else {\n      gS.setCreds(data);\n      await gS.restore(); // wait until we get the session\n      //back from the server\n\n      this.props.updateAppState(this.props.appKey, data); // setting the curUser in App \n      // set the username \n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (this.state.inError) {\n      this.setState({\n        inError: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }\n    }, \"Fish Login\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.localSubmit,\n      error: this.state.inError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"UserName\",\n      type: \"text\",\n      name: \"_userName\",\n      onChange: this.localChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"_passWord\",\n      onChange: this.localChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      content: this.state.Message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }\n    }))));\n  }\n\n}\n\nclass RegisterButton extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Button, {\n      color: \"orange\",\n      fluid: true,\n      onClick: this.props.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }\n    }, \"Register New Fish\");\n  }\n\n}\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showRegister: false // control the visibility of Register Modal\n      // initially  false\n      // goes to true when Register button is clicked\n      // goes to false when we close the Register Modal\n\n    };\n  }\n\n  showModal(e) {\n    this.setState({\n      showRegister: true\n    });\n  }\n\n  killModal(e) {\n    this.setState({\n      showRegister: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      show: this.state.showRegister,\n      kill: this.killModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(LoginDialog, {\n      updateAppState: this.props.updateAppState,\n      appKey: this.props.appKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(RegisterButton, {\n      show: this.showModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 3\n      }\n    }))));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/Login.js"],"names":["React","Register","Button","Form","Grid","Header","Message","Segment","bS","gS","LoginDialog","Component","state","_userName","_passWord","inError","localChange","handleChange","bind","localSubmit","handleSubmit","e","preventDefault","uData","userName","passWord","data","send","id","setState","setCreds","restore","props","updateAppState","appKey","target","name","value","render","RegisterButton","show","LoginForm","showRegister","showModal","killModal","height","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\n// import axios from 'axios';\nimport Register from \"./Register\"\nimport { Button, Form, Grid, Header,Message, Segment } from 'semantic-ui-react'\nimport {bS} from '../BabyTalk'\nimport {gS} from '../gSession'\n\n\nclass LoginDialog extends React.Component{\n    state = {\n\t_userName : null,\n\t_passWord : null,\n\tMessage : null,\n\tinError : false,\n    }\n\n   async handleSubmit(e){\n        e.preventDefault();  // don't reload the page\n        let uData = { userName: this.state._userName, passWord: this.state._passWord }\n\n        // axios.post('/loginVerify', uData)\n        //     .then(res => {                // and add it to the post\n\t// \t// we want to update the App state!!\n\t// \t// this component wants to update App's curUser\n\t// \tif (res.data.id === -1) {\n\t// \t    this.setState({Message :  \"Login failure\"})\n\t// \t    this.setState({inError : true})\n\t// \t}\n\t// \telse {\n\t// \t    this.props.updateAppState(this.props.appKey, res.data);\n\t// \t}\n        //     }).catch(err => {\n\t// \tconsole.log(err)\n\t//     })\n\n\n       var data =  await bS.send('/loginVerify', uData)  // talks to the babyServer\n\n\t\n\tif (data.id === -1) {\n\t    this.setState({Message :  \"Login failure\"})\n\t    this.setState({inError : true})\n\t}\n\telse {\n\t    gS.setCreds(data)\n\t    await gS.restore() // wait until we get the session\n\t    //back from the server\n\t    this.props.updateAppState(this.props.appKey, data);\n\t    // setting the curUser in App \n\t    // set the username \n\t}\n\n    }\n\n    handleChange(e) {\n\tthis.setState( {[ e.target.name ] : e.target.value} );\n\n\tif (this.state.inError){\n\t    this.setState({ inError: false});\n\t}\n\n\t\n    }\n\n    localChange = this.handleChange.bind(this);\n    localSubmit = this.handleSubmit.bind(this);\n\n    render() {\n\treturn (\n\t    <div>\n\t\t<Header as='h2' color='teal' textAlign='center'>\n\t\tFish Login \n\t    </Header>\n\t\t<Form size='large' onSubmit = {this.localSubmit} error={this.state.inError}>\n            <Segment stacked>\n\t\t<Form.Input fluid icon='user'\n\t            iconPosition='left' placeholder='UserName' type=\"text\"\n                    name = \"_userName\" onChange= {this.localChange} \n\t\t/>\n\t\t\n\t\t<Form.Input fluid  icon='lock' iconPosition='left'\n          \t    placeholder='Password' type='password'\n                    name = \"_passWord\"   onChange={this.localChange} \n\t\t/>\n\n\t\t<Button color='teal' fluid size='large'>\n                   Login\n                </Button>\n\t\t<Message error content = {this.state.Message} />\n\n            </Segment>\n\t\t</Form>\n\t    </div>\n\t);\n    }\n}\n\n\nclass RegisterButton extends React.Component{\n    render() {\n\treturn(\n\t\t<Button color='orange' fluid onClick={this.props.show}>\n      \t\tRegister New Fish\n                </Button>\n\t)\n    }\n}\n\nclass LoginForm extends React.Component{\n    state = {\n\tshowRegister : false,  // control the visibility of Register Modal\n\t// initially  false\n\t// goes to true when Register button is clicked\n\t// goes to false when we close the Register Modal\n    }\n\n    showModal(e){\n\tthis.setState ({showRegister:  true})\n    }\n    \n    killModal(e){\n\tthis.setState ({showRegister:  false})\n    }\n\n    render(){\n\treturn (\n\t    <div>\n\n\t\t<Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n\t\t<Grid.Column style={{ maxWidth: 450 }}>\n\n\t\t<Register show = {this.state.showRegister} kill = {this.killModal.bind(this)} />\n\n\t\t<LoginDialog  \tupdateAppState = {this.props.updateAppState}\n                   appKey = {this.props.appKey} />\n\n\t\t<RegisterButton  show = {this.showModal.bind(this)} />\n\n                </Grid.Column>\n\t\t</Grid>\n\t    \n\t\t</div>\n    )\n    }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}