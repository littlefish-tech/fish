{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/EventList.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Header, Grid, Icon, Item, List } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { bS } from '../BabyTalk';\n\nclass EventList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: 'Fish Events',\n      events: [],\n      eventSeq: 0,\n      headerColor: 'blue',\n      refreshColor: 'grey',\n      refreshSeq: 0\n    };\n  }\n\n  processEventList(events) {\n    this.setState({\n      events: events\n    });\n  }\n\n  findEventsById(id) {\n    let event = this.state.events.filter(ev => ev.id === id);\n    return event[0];\n  }\n\n  editEvent(rE, {\n    name,\n    value\n  }) {\n    console.log(\"edit\");\n    console.log(value);\n    console.log(this.findEventsById(value));\n  }\n\n  async modifyEventStatus(eid) {\n    let delData = {\n      userName: this.props.curUser.name,\n      eventID: eid\n    };\n    let data = await bS.post('/deleteEvent', delData);\n\n    if (data) {\n      this.props.updateFishState(\"updateEvents\", this.props.appState.updateEvents + 1);\n    } else {\n      this.props.setError(true);\n      console.log(\"babyserver laid an egg\");\n    } // update the event list\n    //this.getEvents();\n\n  }\n\n  deleteEvent(rE, {\n    name,\n    value\n  }) {\n    this.modifyEventStatus(value);\n  }\n\n  EventDisplay(ev) {\n    var a = new Date(ev.time * 1000);\n    var time = moment(a).format('LLL');\n    var duration = moment.duration(ev.duration, \"minutes\").humanize();\n    var loc = ev.location ? \"at \" + ev.location : \"\";\n    var disabled = ev.status === 0;\n\n    if (disabled) {\n      return \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(List.Item, {\n      key: ev.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      color: \"teal\",\n      content: ev.event_name,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, !disabled && /*#__PURE__*/React.createElement(Icon, {\n      name: \"edit\",\n      size: \"small\",\n      color: \"grey\",\n      value: ev.id,\n      onClick: this.editEvent.bind(this),\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), !disabled && /*#__PURE__*/React.createElement(Icon, {\n      name: \"delete\",\n      size: \"small\",\n      color: \"grey\",\n      value: ev.id,\n      onClick: this.deleteEvent.bind(this),\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Item.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, time + \" \" + \"(\" + duration + \") \" + loc, \" \"), /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, ev.detail))));\n  }\n\n  async getEvents() {\n    var data = await bS.post(\"/getAllEvents\", {\n      userName: this.props.curUser.name\n    }); // waits until await has completed\n\n    if (data) {\n      this.processEventList(data);\n    } else {\n      this.props.setError(true);\n      console.log(\"babyserver laid an egg\");\n    }\n  }\n\n  updateTitleColor(c) {\n    this.props.setTitle(this.state.title, c);\n  }\n\n  checkEventUpdate() {\n    if (!this.props.appState.updateEvents) {\n      this.props.updateFishState(\"updateEvents\", 0);\n    }\n\n    if (this.props.appState.updateEvents > this.state.eventSeq) {\n      this.refreshEvents();\n      this.setState({\n        eventSeq: this.props.appState.updateEvents\n      });\n    } else {//console.log(\"event list unchanged\")\n      //this.setState({headerColor: 'orange'})\n      //setTimeout(this.updateEventList.bind(this), 50);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.triggerRefresh < this.props.triggerRefresh) {\n      this.setState({\n        refreshSeq: this.props.triggerRefresh\n      });\n      this.refreshEvents();\n    }\n  }\n\n  componentDidMount() {\n    this.props.noMenu(false);\n    this.props.setError(false);\n    this.props.setTitle(this.state.title, this.state.headerColor);\n    this.refreshEvents();\n    this.timer = setInterval(() => this.checkEventUpdate(), 1000);\n    this.props.setRefresh(\"grey\", false);\n    this.setState({\n      refreshSeq: this.props.triggerRefresh\n    });\n  }\n\n  resetRefreshColor() {\n    this.updateTitleColor(\"grey\");\n    this.props.setRefresh(\"grey\", false);\n  }\n\n  refreshEvents() {\n    this.props.setRefresh(\"red\", true);\n    this.updateTitleColor('orange');\n    this.getEvents();\n    setTimeout(this.resetRefreshColor.bind(this), 3000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 4\n      }\n    }, this.state.events.map(ev => this.EventDisplay(ev)) // call eventDisplay on every element of state.events\n    ));\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/EventList.js"],"names":["React","Component","Header","Grid","Icon","Item","List","moment","bS","EventList","state","title","events","eventSeq","headerColor","refreshColor","refreshSeq","processEventList","setState","findEventsById","id","event","filter","ev","editEvent","rE","name","value","console","log","modifyEventStatus","eid","delData","userName","props","curUser","eventID","data","post","updateFishState","appState","updateEvents","setError","deleteEvent","EventDisplay","a","Date","time","format","duration","humanize","loc","location","disabled","status","event_name","bind","detail","getEvents","updateTitleColor","c","setTitle","checkEventUpdate","refreshEvents","componentDidUpdate","oldProps","triggerRefresh","componentDidMount","noMenu","timer","setInterval","setRefresh","resetRefreshColor","setTimeout","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Header, Grid, Icon, Item, List } from 'semantic-ui-react'\nimport moment from 'moment'\nimport {bS} from '../BabyTalk'\n\nclass EventList extends Component{\n\n    state = {\n\ttitle : 'Fish Events',\n\tevents : [],\n\teventSeq : 0,\n\theaderColor : 'blue',\n\trefreshColor : 'grey',\n\trefreshSeq : 0\n    }\n    \n\n    processEventList(events){\n\tthis.setState({events : events})\n    }\n\n    findEventsById(id){\n\tlet event= this.state.events.filter(ev => ev.id === id)\n\treturn event[0]\n    }\n\n\n    editEvent(rE, {name, value}){\n\tconsole.log(\"edit\")\n\tconsole.log(value)\n\tconsole.log(this.findEventsById(value))\n    }\n\n    async modifyEventStatus(eid){\n\n\tlet delData = {\n\t    userName   : this.props.curUser.name,\n\t    eventID : eid\n\t}\n\n\t\t\n\tlet data = await bS.post('/deleteEvent', delData)\n\n\n\tif (data){\n\t    this.props.updateFishState(\"updateEvents\", this.props.appState.updateEvents +1)\n\t}\n\telse{\n\t    this.props.setError(true);\n\t    console.log(\"babyserver laid an egg\");\n       }\n\n\n\t// update the event list\n\t\n\t//this.getEvents();\n\t\n    }\n    \n    deleteEvent(rE, {name, value}){\n\tthis.modifyEventStatus(value)\n\t\n\t\n    }\n\n    EventDisplay(ev){\n\n\tvar a = new Date(ev.time * 1000);\n\tvar time = moment(a).format('LLL')\n\tvar duration = moment.duration(ev.duration, \"minutes\").humanize()\n\tvar loc = ev.location? \"at \" + ev.location : \"\"\n\tvar disabled = (ev.status === 0)\n\tif (disabled){\n\t    return (\"\")\n\t}\n  \n\treturn (  <List.Item key = {ev.id} >\n\t\t  <Item >\n\t\t  \n\t\t  <Item.Content >\n\t\t  <Item.Header>\n\t\t  <Grid columns = {2}>\n\t\t  <Grid.Column >\n\t\t  <Header color='teal' content={ev.event_name} disabled={disabled}/>\n\t\t  </Grid.Column>\n\t\t  <Grid.Column textAlign='right'>\n\t\t  {!disabled && <Icon name = 'edit' size = 'small' color='grey' value={ev.id}\n\t\t  onClick={this.editEvent.bind(this)}\n\t\t   disabled={disabled}/>}\n\t\t  {!disabled && <Icon name = 'delete' size = 'small' color='grey' value={ev.id}\n\t\t   onClick={this.deleteEvent.bind(this)}\n\t\t   disabled={disabled}/>}\n\t\t  </Grid.Column>\n\t\t  </Grid>\n\t\t  </Item.Header>\n\t\t  <Item.Meta>{time  + \" \" + \"(\" + duration + \") \" + loc } </Item.Meta>\n\t\t  <Item.Description>\n\t\t  {ev.detail}\n\t\t  </Item.Description>\n\t\t  </Item.Content>\n\t\t  </Item>\n\t\t  \n\t\t  </List.Item>)\n    }\n\n   async  getEvents(){\n       var data = await bS.post(\n           \"/getAllEvents\", {\n\t       userName: this.props.curUser.name,\n\t   })\n       // waits until await has completed\n\n       if (data){\n\t   this.processEventList(data)\n       }\n       else{\n\t   this.props.setError(true);\n\t   console.log(\"babyserver laid an egg\")\n       }\n   }\n\n\n    updateTitleColor(c){\n\tthis.props.setTitle(this.state.title, c)\n    }\n\n    checkEventUpdate(){\n\t\n\tif (!this.props.appState.updateEvents){\n\t    this.props.updateFishState(\"updateEvents\", 0)\n\t}\n\t\n\tif (this.props.appState.updateEvents > this.state.eventSeq){\n\t\tthis.refreshEvents()\n\t    this.setState({eventSeq : this.props.appState.updateEvents})\n\t}\n\telse{\n\t    //console.log(\"event list unchanged\")\n\t    //this.setState({headerColor: 'orange'})\n\t    //setTimeout(this.updateEventList.bind(this), 50);\n\t}\n    }\n\n    componentDidUpdate(oldProps){\n\tif (oldProps.triggerRefresh < this.props.triggerRefresh){\n\t    this.setState({refreshSeq : this.props.triggerRefresh})\n\t    this.refreshEvents()\n\t}\n    }\n\n    componentDidMount(){\n\tthis.props.noMenu(false)\n\tthis.props.setError(false);\n\tthis.props.setTitle(this.state.title, this.state.headerColor)\n\tthis.refreshEvents();\n\n\tthis.timer = setInterval(()=> this.checkEventUpdate(), 1000)\n\tthis.props.setRefresh(\"grey\", false)\n\tthis.setState({refreshSeq : this.props.triggerRefresh})\n    }\n\n    resetRefreshColor(){\n\tthis.updateTitleColor(\"grey\")\n\tthis.props.setRefresh(\"grey\", false)    \n}\n\n    refreshEvents(){\n\tthis.props.setRefresh(\"red\", true)\n\tthis.updateTitleColor('orange')\n\tthis.getEvents()\n\tsetTimeout(this.resetRefreshColor.bind(this), 3000)\n    }\n    \n    \n    render(){\n      \t\treturn(\n\n\t\t<div>\n\t\t\t<List animated={true}>\n\t\t{\n\t\t    this.state.events.map((ev) => this.EventDisplay(ev))\n\t\t // call eventDisplay on every element of state.events\n\t\t}\n \t\t</List>\n               </div>\n\t)\n    }\n}\n\nexport default EventList;\n\n"]},"metadata":{},"sourceType":"module"}