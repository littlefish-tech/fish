{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/Weather.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Transition, Icon, Container, Radio, Form, Input, Message } from 'semantic-ui-react'; // import moment from 'moment'\n\nimport axios from 'axios';\nimport { bS } from '../BabyTalk';\nimport { gS } from '../gSession';\n\nclass WeatherDisplay extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayC: false\n    };\n  }\n\n  switchTemp(e) {\n    e.preventDefault();\n    this.setState({\n      displayC: !this.state.displayC\n    });\n  }\n\n  render() {\n    let W = this.props.w;\n    let K = 273.15;\n    let weatherIconId = W.weather[0].icon;\n    let wIILen = weatherIconId.length;\n    let lastChar = W.weather[0].icon.charAt(wIILen - 1);\n    let weatherCond = W.weather[0].id;\n    let dayNight = lastChar === 'n' ? \"night-\" : \"day-\";\n    let dayLight = dayNight === 'day-';\n    let iconName = \"wi wi-owm-\" + dayNight + weatherCond;\n    let bgColor = \"white\";\n    let fgColor = 'orange';\n\n    if (!dayLight) {\n      bgColor = 'darkblue';\n      fgColor = 'white';\n    }\n\n    function KtoC(t) {\n      return (t - K).toFixed(1);\n    }\n\n    function KtoF(t) {\n      return (KtoC(t) * 9 / 5 + 32).toFixed(1);\n    }\n\n    let iconStyle = {\n      color: fgColor,\n      fontSize: '40px',\n      backgroundColor: bgColor,\n      //width : '30%',\n      height: '100%',\n      textAlign: 'center',\n      paddingTop: '30px',\n      paddingBottom: '30px',\n      paddingLeft: '5%',\n      paddingRight: '5%',\n      marginTop: \"8px\",\n      marginBottom: \"5px\"\n    };\n    let windStyle = {\n      color: 'blue'\n    };\n    let curTempStyle = {\n      color: \"#FFA233\",\n      fontSize: \"40px\",\n      fontFamily: \"sans-serif\",\n      fontWeight: \"bold\",\n      marginTop: \"10px\",\n      paddingLeft: '5%',\n      paddingRight: '5%'\n    };\n    let mTempStyle = {\n      color: \"teal\",\n      fontSize: \"18px\"\n    };\n    let curTemp = this.state.displayC ? KtoC(W.main.temp) : KtoF(W.main.temp);\n    let maxTemp = this.state.displayC ? KtoC(W.main.temp_max) : KtoF(W.main.temp_max);\n    let minTemp = this.state.displayC ? KtoC(W.main.temp_min) : KtoF(W.main.temp_min);\n    let degC = \"\\u2103\";\n    let degF = \"\\u2109\";\n    let degrees = this.state.displayC ? degC : degF;\n    let windDeg = W.wind.deg;\n    let windIconName = `wi wi-wind from-${windDeg}-deg`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      slider: true,\n      checked: this.state.displayC === false,\n      onClick: this.switchTemp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 3\n      }\n    })), this.props.containerWidth, /*#__PURE__*/React.createElement(\"div\", {\n      style: curTempStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 3\n      }\n    }, curTemp, degrees, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: iconName,\n      style: iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: windIconName,\n      style: (iconStyle, windStyle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    })), \"max \", /*#__PURE__*/React.createElement(\"span\", {\n      style: mTempStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, maxTemp, degrees), \"\\xA0\\xA0 min \", /*#__PURE__*/React.createElement(\"span\", {\n      style: mTempStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, minTemp, degrees));\n  }\n\n}\n\nclass Weather extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: 'Weather',\n      titleColor: 'pink',\n      owMapKey: 'fe0e998401ffc6a75006eb0735e315d8',\n      wData: null,\n      loadSearch: false,\n      zipcode: \"\",\n      zipCodeError: false,\n      messageHidden: true,\n      refreshColor: 'grey',\n      refreshSeq: 0,\n      loading: false,\n      cityID: null,\n      weatherCity: null,\n      inputVisible: false\n    };\n  }\n\n  async updateWeather(wdata) {\n    this.setState({\n      wData: wdata\n    }); // get the lat, long from wdata, and look for the lat/long from mongodb, mongodb send back city, state/county info\n    // we send lat, long to babyserver\n    //console.log(wdata)\n\n    var cityData = {\n      userName: this.props.curUser.name,\n      lat: wdata.coord.lat,\n      lon: wdata.coord.lon\n    };\n    var data = await bS.post(\"/getCityInfo\", cityData);\n\n    if (!data) {\n      console.log(\"babyserver laid an egg\");\n      this.props.setError(true);\n      return;\n    } else {\n      this.props.setError(false);\n    }\n\n    var foo = `https://api.openweathermap.org/data/2.5/onecall?lat=${wdata.coord.lat}&lon=${wdata.coord.lon}&exclude={current,minutely,hourly,alerts}&appid=${this.state.owMapKey}&units=metric`; //http://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${this.state.owMapKey}`\n\n    axios.get(foo).then(res => {//console.log(res.data)\n    });\n    var state = data.state ? data.state : data.country;\n    var city = wdata.name + \", \" + state;\n    this.setState({\n      weatherCity: city\n    });\n    this.setState({\n      cityID: data.id\n    });\n    var aData = {\n      cityID: data.id\n    };\n    gS.setAppData(this.props.gridID, this.props.rIndex, this.props.cIndex, aData);\n    this.props.setTitle(city, this.state.titleColor);\n    this.setState({\n      inputVisible: false\n    });\n  }\n\n  inputValid(e) {\n    if (this.state.zipcode === \"\") {\n      this.setState({\n        zipCodeError: true\n      });\n    }\n  }\n\n  inputTimeOut(e) {\n    this.setState({\n      zipCodeError: false\n    });\n  }\n\n  getAPIWeather(cityID) {\n    var zURL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipcode}&appid=${this.state.owMapKey}`;\n    var cURL = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.zipcode}&appid=${this.state.owMapKey}`;\n    var wURL = parseInt(this.state.zipcode) ? zURL : cURL;\n\n    if (parseInt(cityID)) {\n      //console.log(this.state.cityID)\n      //console.log(cityID)\n      wURL = `http://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${this.state.owMapKey}`;\n    }\n\n    axios.get(wURL).then(res => {\n      this.updateWeather(res.data);\n      this.setState({\n        loadSearch: false\n      });\n    }).catch(error => {\n      if (error && this.state.zipcode !== \"\") {\n        this.setState({\n          messageHidden: false\n        });\n      }\n    });\n  }\n\n  async getWeather() {\n    this.getAPIWeather(true);\n  }\n\n  handleChange(e) {\n    this.setState({\n      messageHidden: true\n    });\n    this.setState({\n      zipCodeError: false\n    });\n    this.setState({\n      zipcode: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.inputValid(e);\n    setTimeout(this.inputTimeOut.bind(this), 3000);\n    this.setState({\n      loadSearch: true\n    });\n    this.getWeather();\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.triggerRefresh < this.props.triggerRefresh) {\n      this.refreshWeather();\n    }\n  }\n\n  componentDidMount() {\n    this.props.setTitle(this.state.title, this.state.titleColor);\n    this.props.noMenu(false);\n    this.props.setError(false);\n    this.props.setRefresh(\"grey\", false);\n    var appData = gS.getAppData(this.props.gridID, this.props.rIndex, this.props.cIndex);\n    var inputCity = false;\n\n    if (appData && appData.cityID) {\n      inputCity = appData.cityID;\n    }\n\n    if (inputCity) {\n      this.setState({\n        cityID: inputCity\n      });\n      this.getAPIWeather(inputCity);\n    }\n  }\n\n  refreshWeather() {\n    this.props.setRefresh(\"red\", true);\n    this.updateTitleColor('orange');\n    this.getAPIWeather(false);\n    this.setState({\n      loading: true\n    });\n    setTimeout(this.resetRefreshColor.bind(this), 3000);\n  }\n\n  resetRefreshColor() {\n    this.updateTitleColor(this.state.titleColor);\n    this.props.setRefresh(\"grey\", false);\n  }\n\n  updateTitleColor(c) {\n    this.props.setTitle(this.state.weatherCity, c);\n  }\n\n  weatherInput() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      action: {\n        icon: 'search',\n        loading: false,\n        onClick: this.handleSubmit.bind(this)\n      },\n      placeholder: \"Zip Code or City Name\",\n      value: this.state.zipcode,\n      onChange: this.handleChange.bind(this),\n      error: this.state.zipCodeError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      hidden: this.state.messageHidden,\n      error: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 3\n      }\n    }, \"Location not found.\"));\n  }\n\n  showInput() {\n    this.setState({\n      inputVisible: !this.state.inputVisible\n    });\n  }\n\n  showWeather() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n      w: this.state.wData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"cog\",\n      onClick: this.showInput.bind(this),\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Transition, {\n      visible: this.state.inputVisible,\n      animation: \"scale\",\n      duration: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 3\n      }\n    }, this.weatherInput())));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 3\n      }\n    }, this.state.wData ? this.showWeather() : this.weatherInput());\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/Weather.js"],"names":["React","Transition","Icon","Container","Radio","Form","Input","Message","axios","bS","gS","WeatherDisplay","Component","state","displayC","switchTemp","e","preventDefault","setState","render","W","props","w","K","weatherIconId","weather","icon","wIILen","length","lastChar","charAt","weatherCond","id","dayNight","dayLight","iconName","bgColor","fgColor","KtoC","t","toFixed","KtoF","iconStyle","color","fontSize","backgroundColor","height","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginBottom","windStyle","curTempStyle","fontFamily","fontWeight","mTempStyle","curTemp","main","temp","maxTemp","temp_max","minTemp","temp_min","degC","degF","degrees","windDeg","wind","deg","windIconName","bind","containerWidth","Weather","title","titleColor","owMapKey","wData","loadSearch","zipcode","zipCodeError","messageHidden","refreshColor","refreshSeq","loading","cityID","weatherCity","inputVisible","updateWeather","wdata","cityData","userName","curUser","name","lat","coord","lon","data","post","console","log","setError","foo","get","then","res","country","city","aData","setAppData","gridID","rIndex","cIndex","setTitle","inputValid","inputTimeOut","getAPIWeather","zURL","cURL","wURL","parseInt","catch","error","getWeather","handleChange","target","value","handleSubmit","setTimeout","componentDidUpdate","oldProps","triggerRefresh","refreshWeather","componentDidMount","noMenu","setRefresh","appData","getAppData","inputCity","updateTitleColor","resetRefreshColor","c","weatherInput","onClick","showInput","showWeather"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport {Transition, Icon, Container, Radio, Form, Input, Message} from 'semantic-ui-react'\n// import moment from 'moment'\nimport axios from 'axios'\nimport {bS} from '../BabyTalk'\nimport {gS} from '../gSession'\n\n\n\nclass WeatherDisplay extends React.Component{\n\n    state = {\n\tdisplayC : false,\n    }\n\t\n\tswitchTemp(e){\n\t    e.preventDefault()\n\t    this.setState({displayC : !this.state.displayC})\n\t}\n\n    render(){\n\tlet W = this.props.w\n\tlet K = 273.15\n\tlet weatherIconId = W.weather[0].icon\n\tlet wIILen =  weatherIconId.length\n\tlet lastChar = W.weather[0].icon.charAt(wIILen - 1);\n\tlet weatherCond = W.weather[0].id\n\tlet dayNight = lastChar === 'n' ? \"night-\": \"day-\"\n\n\tlet dayLight = dayNight === 'day-'\n\t\n\tlet iconName = \"wi wi-owm-\"+dayNight+weatherCond\n\t\n\tlet bgColor = \"white\"\n\tlet fgColor = 'orange' \n\tif (!dayLight){\n\t    bgColor = 'darkblue'\n\t    fgColor = 'white'\n\t}\n\n\tfunction KtoC(t){\n\t    return (t - K).toFixed(1)\n\t}\n\n\tfunction KtoF(t){\n\t    return (((KtoC(t) * 9)/5)+32).toFixed(1)\n\t}\n\n\t\n\n\tlet iconStyle = {\n\t    color : fgColor,\n\t    fontSize: '40px',\n\t    backgroundColor: bgColor,\n\t    //width : '30%',\n\t    height : '100%',\n\n\t    textAlign : 'center', \n\t    paddingTop: '30px',\n\t    paddingBottom: '30px',\n\t    paddingLeft: '5%',\n\t    paddingRight: '5%', \n\t    marginTop: \"8px\",\n\t    marginBottom: \"5px\"\n\t}\n\n\tlet windStyle = {\n\t    color : 'blue',\n\t}\n\n\t\n\tlet curTempStyle ={\n\t    color: \"#FFA233\",\n\t    fontSize: \"40px\",\n\t    fontFamily:\"sans-serif\",\n\t    fontWeight:\"bold\",\n\t    marginTop:\"10px\",\n\t    paddingLeft: '5%',\n\t    paddingRight: '5%',\n\t}\n\tlet mTempStyle={\n\t\tcolor: \"teal\", fontSize: \"18px\"\n\t}\n\n\tlet curTemp = this.state.displayC ? KtoC(W.main.temp) : KtoF(W.main.temp)\n\tlet maxTemp = this.state.displayC ? KtoC(W.main.temp_max) : KtoF(W.main.temp_max)\n\tlet minTemp = this.state.displayC ? KtoC(W.main.temp_min) : KtoF(W.main.temp_min)\n\n\tlet degC = \"\\u2103\"\n\tlet degF = \"\\u2109\"\n\n\tlet degrees = this.state.displayC ? degC : degF\n\tlet windDeg = W.wind.deg\n\tlet windIconName = `wi wi-wind from-${windDeg}-deg`\n\treturn (\n \n\t\t<div>\n\t\t<Container textAlign='right'>\n\t\t<Radio slider checked={this.state.displayC === false} onClick={this.switchTemp.bind(this)}/>\n\t\t</Container>\n\t\t{this.props.containerWidth}\n\n\t\t<div style={curTempStyle}>{curTemp}{degrees} <i className={iconName} style={iconStyle}></i>\n\t    \t<i className={windIconName} style={iconStyle, windStyle}/></div>\n\t\tmax <span style={mTempStyle}>{maxTemp}{degrees}</span>&nbsp;&nbsp;\n\t    min <span style={mTempStyle}>{minTemp}{degrees}</span>\n\t    </div>\n\t)\n    }\n}\n\n\nclass Weather  extends React.Component{\n\n    state = {\n\ttitle : 'Weather',\n\ttitleColor : 'pink',\n\n\towMapKey: 'fe0e998401ffc6a75006eb0735e315d8',\n\twData : null,\n\tloadSearch: false,\n\tzipcode: \"\",\n\tzipCodeError: false,\n\tmessageHidden: true,\n\trefreshColor : 'grey',\n\trefreshSeq : 0,\n\tloading: false,\n\n\t\n\tcityID : null,\n\tweatherCity : null,\n\tinputVisible: false,\n    }\n\n\n    async updateWeather(wdata){\n\tthis.setState({wData : wdata})\n\t// get the lat, long from wdata, and look for the lat/long from mongodb, mongodb send back city, state/county info\n\t// we send lat, long to babyserver\n\t//console.log(wdata)\n\tvar cityData = {\n\t\tuserName: this.props.curUser.name,\n\t\tlat: wdata.coord.lat,\n\t\tlon: wdata.coord.lon,\n\t}\n\t\n\tvar data = await bS.post(\"/getCityInfo\", cityData)\n\n\tif (!data){\n\t    console.log(\"babyserver laid an egg\")\n\t    this.props.setError(true)\n\t    return;\n\t}\n\telse{\n\t    this.props.setError(false)\n\t}\n\n\n\n\tvar foo = `https://api.openweathermap.org/data/2.5/onecall?lat=${wdata.coord.lat}&lon=${wdata.coord.lon}&exclude={current,minutely,hourly,alerts}&appid=${this.state.owMapKey}&units=metric`\n\n    //http://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${this.state.owMapKey}`\n\n\n\taxios.get(foo)\n\t    .then(res => {\n\t\t//console.log(res.data)\n\t    })\n\n\t\n\tvar state = data.state ?  data.state : data.country\n\t\n\tvar city = wdata.name + \", \" + state\n\tthis.setState({weatherCity : city})\n\tthis.setState({cityID : data.id})\n\tvar aData = {\n\t\tcityID : data.id\n\t}\n\tgS.setAppData(this.props.gridID,\n\t\tthis.props.rIndex,\n\t\tthis.props.cIndex, \n\t\taData)\n\n\tthis.props.setTitle(city, this.state.titleColor)\n\tthis.setState({inputVisible: false})\n    }\n\n    inputValid(e){\n\tif (this.state.zipcode === \"\"){\n\t    this.setState({zipCodeError: true})\n\t}\n    }\n\n    inputTimeOut(e){\n\tthis.setState({zipCodeError: false})\n    }\n\n\n    getAPIWeather(cityID){\n\n\tvar zURL =\n\t    `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipcode}&appid=${this.state.owMapKey}`\n\tvar cURL =\n\t    `http://api.openweathermap.org/data/2.5/weather?q=${this.state.zipcode}&appid=${this.state.owMapKey}`\n\n\tvar wURL = parseInt(this.state.zipcode) ? zURL : cURL\n\n\tif (parseInt(cityID)){\n\t    //console.log(this.state.cityID)\n\t    //console.log(cityID)\n\t    wURL =\n\t\t`http://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${this.state.owMapKey}`\n\t}\n\n\taxios.get(wURL)\n\t    .then(res => {\n\t\tthis.updateWeather(res.data)\n\t\tthis.setState({loadSearch: false})\n\t    })\n\t    .catch(error => {\n\t\tif (error && this.state.zipcode !== \"\"){\n\t\t    this.setState({messageHidden: false})\n\t\t}\n\t    })\n    }\n    \n    \n    async getWeather(){\n\tthis.getAPIWeather(true)\n    }\n\n    handleChange(e){\n\tthis.setState({messageHidden: true})\n\tthis.setState({zipCodeError: false})\n\tthis.setState({zipcode: e.target.value})\n    }\n\n    handleSubmit(e){\n\te.preventDefault();\n\tthis.inputValid(e)\n\tsetTimeout(this.inputTimeOut.bind(this), 3000)\n\tthis.setState({loadSearch: true})\n\tthis.getWeather()\n    }\n\n    componentDidUpdate(oldProps){\n\tif (oldProps.triggerRefresh < this.props.triggerRefresh){\n\t    this.refreshWeather()\n\t}\n    }\n\t\n    componentDidMount(){\n\tthis.props.setTitle(this.state.title, this.state.titleColor)\n\tthis.props.noMenu(false)\n\tthis.props.setError(false)\n\tthis.props.setRefresh(\"grey\", false)\n\n\tvar appData = gS.getAppData(this.props.gridID,\n\t\t      this.props.rIndex,\n\t\t      this.props.cIndex)\n\n\n\tvar inputCity = false;\n\tif (appData && appData.cityID) {\n\t inputCity = appData.cityID;   \n\t}\n\n\tif (inputCity){\n\t    this.setState({cityID : inputCity})\n\t    this.getAPIWeather(inputCity)\n\t}\n\t\n    }\n    \n    refreshWeather(){\n\tthis.props.setRefresh(\"red\", true)\n\tthis.updateTitleColor('orange')\n\tthis.getAPIWeather(false)\n\tthis.setState({loading: true})\n\tsetTimeout(this.resetRefreshColor.bind(this), 3000)\n    }\n\n\n    resetRefreshColor(){\n\tthis.updateTitleColor(this.state.titleColor)\n\tthis.props.setRefresh(\"grey\", false)    \n    }\n    \n    updateTitleColor(c){\n\tthis.props.setTitle(this.state.weatherCity, c)\n    }\n\t\t\n    weatherInput(){\n\treturn (\n\t    \t<Form onSubmit={this.handleSubmit.bind(this)}>\n\t\t<Input action={{ icon: 'search', loading: false, onClick : this.handleSubmit.bind(this)}} \n\t    placeholder='Zip Code or City Name' value={this.state.zipcode} \n\t    onChange={this.handleChange.bind(this)}\n\t    error={this.state.zipCodeError}\n\t\t/>\n\t\t<Message hidden={this.state.messageHidden} error={true}>\n\t\tLocation not found.\n\t\t</Message> \n\n\t    </Form>\n\n\t)\n    }\n\n    showInput(){\n\tthis.setState({inputVisible: !this.state.inputVisible})\n    }\n\n    showWeather(){\n\treturn (\n\t    <div>\n\t\t<WeatherDisplay w={this.state.wData}\n\t    \n\t\t/>\n\t\t<Container textAlign=\"right\">\n\t\t<Icon name='cog' onClick={this.showInput.bind(this)} color='grey'/>\n\t\t<Transition visible={this.state.inputVisible} animation='scale' duration={500}>\n\t\t{this.weatherInput()}\n\t        </Transition>\n\t\t</Container>\n\t\t</div>\n\t)\n    }\n    \n    render(){\n\treturn(\n\t\t<div>\n\t\t\n\t    {this.state.wData ?  this.showWeather():\n\t     this.weatherInput()}\n\t    \n\n\t\t</div>\n\t)\n    }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}