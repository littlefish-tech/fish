{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/FlexGrid.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Input, Dropdown, Divider, Segment, Icon, Header, Grid } from 'semantic-ui-react';\nimport EventInput from \"./EventInput\";\nimport EventList from \"./EventList\";\nimport Weather from \"./Weather\";\nimport WorldClock from \"./WorldClock\";\nimport Poetry from \"./Poetry\";\nimport MMConnection from \"./MMConnection\";\nimport Otoken from \"./Otoken\";\nimport { gS } from '../gSession';\n\nclass TitleBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      kill: false\n    };\n    this.titleBar = this.titleBar.bind(this);\n  }\n\n  killTitle(rE, {\n    name,\n    value\n  }) {\n    this.props.killPane(rE, {\n      name,\n      value\n    });\n  }\n\n  showRefresh() {\n    return /*#__PURE__*/React.createElement(Icon, {\n      name: \"sync\",\n      color: this.props.showRefresh,\n      loading: this.props.refreshLoading,\n      onClick: this.props.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }\n    });\n  }\n\n  showError() {\n    return /*#__PURE__*/React.createElement(Icon, {\n      name: \"exclamation triangle\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    });\n  }\n\n  titleBar() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      content: this.props.title,\n      color: this.props.titleColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }\n    }, this.props.showError && this.showError(), this.props.showRefresh && this.showRefresh(), /*#__PURE__*/React.createElement(Icon, {\n      name: \"window close\",\n      size: \"large\",\n      color: \"orange\",\n      value: this.props.position,\n      onClick: this.killTitle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, this.props.noMenu ? \"\" : this.titleBar());\n  }\n\n}\n\nclass NoComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addComp: false // show dropdown?\n\n    };\n  }\n\n  componentDidMount() {\n    this.props.noMenu(true);\n  }\n\n  addComponent(rE, {\n    name,\n    value\n  }) {\n    this.props.updateGrid(this.props.rIndex, this.props.cIndex, value);\n  }\n\n  flipComp(rE) {\n    this.setState({\n      addComp: true\n    });\n  }\n\n  showDropdown(rE) {\n    return /*#__PURE__*/React.createElement(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      text: \"Components\",\n      fluid: true,\n      selection: true,\n      defaultOpen: true //placeholder = \"Components\"\n      ,\n      options: compsDropdown,\n      onChange: this.addComponent.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }\n    })));\n  }\n\n  showIcon() {\n    return /*#__PURE__*/React.createElement(Segment, {\n      basic: true,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"add circle\",\n      size: \"large\",\n      color: \"orange\",\n      onClick: this.flipComp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 3\n      }\n    }, !this.state.addComp && this.showIcon(), this.state.addComp && this.showDropdown());\n  }\n\n}\n\nclass GridItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      titleColor: 'orange',\n      showRefresh: false,\n      refreshLoading: false,\n      refresh: 0,\n      noMenu: false,\n      showError: false\n    };\n  }\n\n  setNoMenu(b) {\n    this.setState({\n      noMenu: b\n    });\n  }\n\n  setTitle(t, color) {\n    this.setState({\n      title: t\n    });\n    this.setState({\n      titleColor: color\n    });\n  }\n\n  killItem(rE, {\n    name,\n    value\n  }) {\n    this.setTitle('', '');\n    this.props.kill(rE, {\n      name,\n      value\n    });\n  }\n\n  setRefresh(c, loading) {\n    this.setState({\n      showRefresh: c\n    });\n    this.setState({\n      refreshLoading: loading\n    });\n  }\n\n  setError(e) {\n    this.setState({\n      showError: e\n    });\n  }\n\n  refreshCalled() {\n    this.setState({\n      refresh: this.state.refresh + 1\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    var DynComponent = this.props.Component;\n    var s = this.props.position;\n    var ri = this.props.rIndex;\n    var ci = this.props.cIndex;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TitleBar, {\n      position: s,\n      killPane: this.killItem.bind(this),\n      title: this.state.title,\n      titleColor: this.state.titleColor,\n      showRefresh: this.state.showRefresh,\n      refreshLoading: this.state.refreshLoading,\n      refresh: this.refreshCalled.bind(this),\n      noMenu: this.state.noMenu,\n      showError: this.state.showError,\n      setError: this.setError.bind(this),\n      containerWidth: this.props.containerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(DynComponent, {\n      curUser: this.props.curUser,\n      updateFishState: this.props.updateFishState,\n      appState: this.props.appState,\n      rIndex: ri,\n      cIndex: ci,\n      gridID: this.props.gridID,\n      setTitle: this.setTitle.bind(this),\n      updateGrid: this.props.updateGrid,\n      setRefresh: this.setRefresh.bind(this),\n      triggerRefresh: this.state.refresh,\n      noMenu: this.setNoMenu.bind(this),\n      setError: this.setError.bind(this),\n      containerWidth: this.props.containerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 3\n      }\n    }));\n  }\n\n}\n\nclass FlexGrid extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numCols: 1,\n      numRows: 1,\n      gridContent: {// what goes in each cell  r:c\n      }\n    };\n  }\n\n  componentDidMount() {\n    var rS = gS.getGrid(this.props.gridID); // restored state\n\n    console.log(\"grid component did mount\");\n    console.log(rS);\n\n    if (rS) {\n      this.setState({\n        numCols: rS.numCols\n      });\n      this.setState({\n        numRows: rS.numRows\n      });\n      this.setState({\n        gridContent: rS.gridContent\n      });\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    return; // if (oldProps.sessionSeq < this.props.sessionSeq){\n    //     var rS = gS.getGrid(this.props.gridID) // restored state\n    //     if (rS) {\n    // \tthis.setState({numCols : rS.numCols})\n    // \tthis.setState({numRows : rS.numRows})\n    // \tthis.setState({gridContent : rS.gridContent})\n    //     }\n    // }\n  }\n\n  updateGrid(ri, ci, componentName) {\n    const s = ri + \":\" + ci;\n    var gC = this.state.gridContent;\n    gC[s] = componentName;\n    this.setState({\n      gridContent: gC\n    });\n    var grid = {\n      \"numRows\": this.state.numRows,\n      \"numCols\": this.state.numCols,\n      \"gridContent\": gC\n    };\n    gS.setGrid(this.props.gridID, grid);\n  }\n\n  killPane(rE, {\n    name,\n    value\n  }) {\n    console.log(\"kill \" + value);\n    var gC = this.state.gridContent;\n    gC[value] = NoComponent;\n    this.setState({\n      gridContent: gC\n    });\n    var grid = {\n      \"numRows\": this.state.numRows,\n      \"numCols\": this.state.numCols,\n      \"gridContent\": gC\n    };\n    gS.setGrid(this.props.gridID, grid);\n  }\n\n  getGridItem(ri, ci) {\n    const s = ri + \":\" + ci;\n    var DynComponent = allComponents[this.state.gridContent[s]];\n\n    if (!DynComponent) {\n      DynComponent = NoComponent;\n    } //{DynComponent === NoComponent? '' : this.renderMenu(s)}\n\n\n    return /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      position: s,\n      Component: DynComponent,\n      rIndex: ri,\n      cIndex: ci,\n      kill: this.killPane.bind(this),\n      curUser: this.props.curUser,\n      updateFishState: this.props.updateFishState,\n      appState: this.props.appState,\n      updateGrid: this.updateGrid.bind(this),\n      gridID: this.props.gridID,\n      containerWidth: this.props.containerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  getGridRow(rindex) {\n    return /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 3\n      }\n    }, Array(this.state.numCols).fill().map((_, cindex) => this.getGridItem(rindex, cindex)));\n  }\n\n  modifyGrid(rE, {\n    name,\n    value\n  }) {\n    var nC = this.state.numCols;\n    var nR = this.state.numRows;\n\n    if (value === 'C+') {\n      this.setState({\n        numCols: nC + 1\n      });\n      nC = nC + 1;\n    }\n\n    if (value === 'C-') {\n      var t = nC - 1 >= 0 ? nC - 1 : 0;\n      this.setState({\n        numCols: t\n      });\n      nC = t;\n    }\n\n    if (value === 'R+') {\n      this.setState({\n        numRows: nR + 1\n      });\n      nR = nR + 1;\n    }\n\n    if (value === 'R-') {\n      var r = nR - 1 >= 0 ? nR - 1 : 0;\n      this.setState({\n        numRows: r\n      });\n      nR = r;\n    }\n\n    var grid = {\n      \"numRows\": nR,\n      \"numCols\": nC,\n      \"gridContent\": this.state.gridContent\n    };\n    gS.setGrid(this.props.gridID, grid);\n  }\n\n  gridControl() {\n    return /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"angle double left\",\n      color: \"blue\",\n      value: \"C-\",\n      onClick: this.modifyGrid.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"angle double right\",\n      color: \"blue\",\n      value: \"C+\",\n      onClick: this.modifyGrid.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"angle double up\",\n      color: \"blue\",\n      value: \"R-\",\n      onClick: this.modifyGrid.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"angle double down\",\n      color: \"blue\",\n      value: \"R+\",\n      onClick: this.modifyGrid.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 3\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 3\n      }\n    }, this.gridControl(), /*#__PURE__*/React.createElement(Grid, {\n      columns: this.state.numCols,\n      rows: this.state.numRows,\n      divided: true,\n      padded: true,\n      relaxed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 3\n      }\n    }, Array(this.state.numRows).fill().map((_, index) => this.getGridRow(index))));\n  }\n\n}\n\nexport default FlexGrid; // these are all our components that can go in a grid cell\n\nconst allComponents = {\n  // map from component name to component\n  'EventList': EventList,\n  'EventInput': EventInput,\n  'Weather': Weather,\n  'WorldClock': WorldClock,\n  'Poetry': Poetry,\n  'NoComponent': NoComponent,\n  'MMConnection': MMConnection,\n  'Otoken': Otoken\n}; // user chooses component\n\nconst compsDropdown = [{\n  text: 'EventList',\n  key: 'EventList',\n  value: 'EventList'\n}, {\n  text: 'Weather',\n  key: 'Weather',\n  value: 'Weather'\n}, {\n  text: 'EventInput',\n  key: 'EventInput',\n  value: 'EventInput'\n}, {\n  text: 'Poetry',\n  key: 'Poetry',\n  value: 'Poetry'\n}, {\n  text: 'World Clock',\n  key: 'WorldClock',\n  value: 'WorldClock'\n}, {\n  text: 'MetaMask',\n  key: 'MMConnection',\n  value: 'MMConnection'\n}, {\n  text: \"Swap\",\n  key: 'Otoken',\n  value: 'Otoken'\n}]; // for (i = 0;  < this.state.numRows){\n//   this.getGridRow(i)\n//  }\n// 3 rows 2 columns\n// <grid  col= ths.state.numCols rows = this.state.numRows   >\n// // getGridRow\n//     <g.r>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n// // getGridRow\n//    <g.r>\n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n// // getGridRow\n//     <g.r>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n// </grid>","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/FlexGrid.js"],"names":["React","Container","Input","Dropdown","Divider","Segment","Icon","Header","Grid","EventInput","EventList","Weather","WorldClock","Poetry","MMConnection","Otoken","gS","TitleBar","Component","state","kill","titleBar","bind","killTitle","rE","name","value","props","killPane","showRefresh","refreshLoading","refresh","showError","title","titleColor","position","render","noMenu","NoComponent","addComp","componentDidMount","addComponent","updateGrid","rIndex","cIndex","flipComp","setState","showDropdown","compsDropdown","showIcon","GridItem","setNoMenu","b","setTitle","t","color","killItem","setRefresh","c","loading","setError","e","refreshCalled","componentDidUpdate","DynComponent","s","ri","ci","containerWidth","curUser","updateFishState","appState","gridID","FlexGrid","numCols","numRows","gridContent","rS","getGrid","console","log","oldProps","componentName","gC","grid","setGrid","getGridItem","allComponents","getGridRow","rindex","Array","fill","map","_","cindex","modifyGrid","nC","nR","r","gridControl","index","text","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Container, Input, Dropdown, Divider, Segment,Icon, Header, Grid} from 'semantic-ui-react'\nimport EventInput from \"./EventInput\"\nimport EventList from \"./EventList\"\nimport Weather from \"./Weather\"\nimport WorldClock from \"./WorldClock\"\nimport Poetry from \"./Poetry\"\nimport MMConnection from \"./MMConnection\"\nimport Otoken from \"./Otoken\"\n\nimport {gS} from '../gSession'\n\nclass TitleBar extends React.Component{\n    state = {\n\tkill : false\n    }\n\n    killTitle(rE, {name, value}){\n\tthis.props.killPane(rE,{name, value})\n    }\n\n\tshowRefresh(){\n\t\treturn(\n\t\t\t<Icon name='sync'  color = {this.props.showRefresh} loading={this.props.refreshLoading} \n\t\t    onClick = {this.props.refresh}/>\n\t\t)\n\t}\n\n    \tshowError(){\n\t\treturn(\n\t\t\t<Icon name='exclamation triangle'  color = \"red\" />\n\t\t)\n\t}\n\n    titleBar(){\n\t     \treturn (\n\t\t<Grid columns ={2}>\n\t\t\t<Grid.Column>\n\t\t\t<Header as=\"h2\" content = {this.props.title} color = {this.props.titleColor}/>\n\t\t</Grid.Column>\n\t\t<Grid.Column>\n    \t\t\t<Container textAlign='right'>\n\t\t\t{this.props.showError && this.showError()}\n\t\t\t{this.props.showRefresh && this.showRefresh()}\n     \t    \t<Icon name='window close' size = 'large' color = 'orange' value = {this.props.position}\n     \t         onClick = {this.killTitle.bind(this)}/>\n     \t\t    </Container>\n\t\t</Grid.Column>\n\t\t</Grid>\n     \t)\n    }\n    titleBar = this.titleBar.bind(this) \n\n    render(){\n     \treturn (\n\t    <div>\n\t\t{this.props.noMenu ? \"\" : this.titleBar() }\n\t    \t</div>\n     \t)\n     }\n\n\n}\n\nclass NoComponent extends React.Component{\n    state = {\n\taddComp : false  // show dropdown?\n    }\n\n    componentDidMount(){\n\tthis.props.noMenu(true)\n    }\n\n    addComponent(rE, {name, value}){\n\tthis.props.updateGrid(this.props.rIndex, \n\t\t\t      this.props.cIndex,\n\t\t\t     value)\n\n    }\n\n    flipComp(rE){\n\tthis.setState({addComp: true})\n    }\n    \n    showDropdown(rE){\n\treturn (\n\t    \t<Segment basic textAlign={\"center\"}>\n\t    <Input >\n\t\t<Dropdown\n\t    text = \"Components\"\n\t    fluid = {true} \n\t    selection\n\t    defaultOpen = {true}\n\t    //placeholder = \"Components\"\n\t    options={compsDropdown}\n\t    onChange =  {this.addComponent.bind(this)}\n\t\t/>\n\t\t</Input>\n\t\t</Segment>\n    );\n    }\n\n    showIcon(){\n\treturn (\n\t    <Segment basic textAlign={\"center\"}>\n\t    <Divider hidden />\n\t\t<Icon name='add circle' size = 'large' color = 'orange'\n\t    onClick = {this.flipComp.bind(this)}/>\n\t\t</Segment>\n\t)\n\t    \n    }\n    \n    render(){\n\treturn(\n\t\t<div>\n\t\t{ !this.state.addComp && this.showIcon()}\n         \t   { this.state.addComp && this.showDropdown()}\n\t\t</div>\n\t)\n    }\n}\n\nclass GridItem extends React.Component{\n\n    state = {\n\ttitle: '',\n\ttitleColor : 'orange',\n\tshowRefresh: false,\n\trefreshLoading : false,\n\trefresh : 0,\n\tnoMenu : false,\n\tshowError : false\n    }\n\n    setNoMenu(b){\n\tthis.setState({noMenu: b})\n    }\n    \n    setTitle(t, color){\n\tthis.setState({title: t})\n\tthis.setState({titleColor: color})\n    }\n\n    killItem(rE, {name, value}){\n\tthis.setTitle('', '')\n\tthis.props.kill(rE, {name, value})\n\t}\n\t\n    setRefresh(c, loading){\n\tthis.setState({showRefresh: c})\n\tthis.setState({refreshLoading: loading})\n\t}\n\n    setError(e){\n\tthis.setState({showError: e})\n    }\n\n    refreshCalled(){\n\tthis.setState({refresh: this.state.refresh+1})\n    }\n\n    componentDidUpdate(){\n    }\n\n    render (){\n\tvar DynComponent = this.props.Component\n\tvar s = this.props.position\n\tvar ri = this.props.rIndex\n\tvar ci = this.props.cIndex\n\n\n\t\n\treturn(\n\t    <div>\n\t\t<TitleBar position={s} killPane={this.killItem.bind(this)} title={this.state.title}\n\t    titleColor = {this.state.titleColor} \n\t    showRefresh = {this.state.showRefresh}\n\t    refreshLoading = {this.state.refreshLoading}\n\t    refresh = {this.refreshCalled.bind(this)}\n\t    noMenu = {this.state.noMenu}\n\t    showError = {this.state.showError}\n\t    setError = {this.setError.bind(this)}\n\t    containerWidth = {this.props.containerWidth}\n\t\t/>\n\n\t\t<DynComponent\n\t           curUser = {this.props.curUser}\n          \t   updateFishState = {this.props.updateFishState}\n\t    appState = {this.props.appState}\n            rIndex = {ri} cIndex = {ci}\n\t    gridID = {this.props.gridID}\n\n\n\t    setTitle={this.setTitle.bind(this)}\n\t    updateGrid = {this.props.updateGrid}\n\t    setRefresh={this.setRefresh.bind(this)}\n\t    triggerRefresh = {this.state.refresh}\n\t    noMenu  = {this.setNoMenu.bind(this)}\n\t    setError = {this.setError.bind(this)}\n\t    containerWidth = {this.props.containerWidth}\n\t\t/>\n\t\t</div>\n\t)\n    }\n\n}\n\nclass FlexGrid extends React.Component{\n    // we receive curUser as a prop\n\n    state = {\n\tnumCols : 1,\n\tnumRows : 1,\n\t\n\tgridContent : {  // what goes in each cell  r:c\n\t}\n\t\n    }\n\n    componentDidMount(){\n\tvar rS = gS.getGrid(this.props.gridID) // restored state\n\n\tconsole.log(\"grid component did mount\")\n\tconsole.log(rS)\n\t\n\tif (rS) {\n\t    this.setState({numCols : rS.numCols})\n\t    this.setState({numRows : rS.numRows})\n\t    this.setState({gridContent : rS.gridContent})\n\t}\n    }\n    \n    componentDidUpdate(oldProps){\n\treturn\n\t// if (oldProps.sessionSeq < this.props.sessionSeq){\n\t//     var rS = gS.getGrid(this.props.gridID) // restored state\n\t//     if (rS) {\n\t// \tthis.setState({numCols : rS.numCols})\n\t// \tthis.setState({numRows : rS.numRows})\n\t// \tthis.setState({gridContent : rS.gridContent})\n\t//     }\n\t// }\n    }\n    \n    updateGrid(ri, ci, componentName){\n\tconst s = ri + \":\" + ci\n\tvar gC = this.state.gridContent\n\tgC[s] = componentName\n\tthis.setState({ gridContent: gC })\n\tvar grid = {\n\t\t\"numRows\": this.state.numRows,\n\t\t\"numCols\": this.state.numCols,\n\t\t\"gridContent\": gC\n\t}\n\tgS.setGrid(this.props.gridID, grid)\n    }\n\n\n    killPane(rE, {name, value}){\n\tconsole.log (\"kill \" + value)\n\tvar gC = this.state.gridContent\n\tgC[value] = NoComponent\n\tthis.setState({ gridContent: gC })\n\tvar grid = {\n\t\t\"numRows\": this.state.numRows,\n\t\t\"numCols\": this.state.numCols,\n\t\t\"gridContent\": gC\n\t}\n\tgS.setGrid(this.props.gridID, grid)\n    }\n\n    \n    \n    getGridItem(ri, ci){\n\tconst s = ri + \":\" + ci\n\tvar DynComponent = allComponents[this.state.gridContent[s]]\n\tif (!DynComponent){\n\t    DynComponent = NoComponent\n\t}\n\t//{DynComponent === NoComponent? '' : this.renderMenu(s)}\n\treturn (\n\t\t<Grid.Column>\n  \t\t<GridItem position={s} Component = {DynComponent} \n\t    rIndex = {ri} cIndex = {ci}\n\t    kill={this.killPane.bind(this)}\n\t    curUser = {this.props.curUser}\n\t    updateFishState = {this.props.updateFishState}\n\t    appState = {this.props.appState}\n\t    updateGrid = {this.updateGrid.bind(this)}\n\t    gridID = {this.props.gridID}\n\t    containerWidth = {this.props.containerWidth}\n\t\t/>\n\t\t</Grid.Column>\n\t)\n\t\t    \n\t\n    }\n\n    getGridRow(rindex){\n\treturn(\n\t\t<Grid.Row>\n\t\t{Array(this.state.numCols).fill().map((_, cindex) => this.getGridItem(rindex, cindex))}\n\t       </Grid.Row>\n\t)\n    \n    }\n\n    modifyGrid(rE, {name, value}){\n\tvar nC = this.state.numCols;\n\tvar nR = this.state.numRows;\n\tif (value === 'C+'){\n\t\tthis.setState ({numCols : nC+1})\n\t\tnC = nC + 1\n\t}\n\tif (value === 'C-'){\n\t\tvar t = (nC-1 >= 0 ? nC-1 : 0)\n\t\tthis.setState ({numCols : t })\n\t\tnC = t\n\t}\n\tif (value === 'R+'){\n\t\tthis.setState ({numRows : nR+1})\n\t\tnR = nR + 1\n\t}\n\tif (value === 'R-'){\n\t\tvar r = (nR-1 >= 0? nR-1 : 0)\n\t\tthis.setState ({numRows : r})\n\t\tnR = r\n\t}\n\tvar grid = {\n\t\t\"numRows\": nR,\n\t\t\"numCols\": nC,\n\t\t\"gridContent\": this.state.gridContent\n\t}\n\tgS.setGrid(this.props.gridID, grid)\n\t\n    }\n\n    gridControl(){\n\treturn (\n\t    <Container textAlign = 'center' >\n\t\t<Icon name='angle double left' color = 'blue' value = 'C-'\n\t    onClick = {this.modifyGrid.bind(this)}/>\n\t\t<Icon name='angle double right'  color = 'blue'  value = 'C+'\n\t    onClick = {this.modifyGrid.bind(this)}/>\n\t\t<Icon name='angle double up' color = 'blue' value = 'R-'\n\t    onClick = {this.modifyGrid.bind(this)}/>\n\t\t<Icon name='angle double down'  color = 'blue' value = 'R+'\n\t    onClick = {this.modifyGrid.bind(this)}/>\n\t\t</Container>\n\t)\n    }\n    \n    \n    render(){\n\treturn(\n\t\n\t\t<div>\n\t\t\n\t    {this.gridControl()}\n\n\t\t<Grid  columns ={this.state.numCols} rows = {this.state.numRows}\n\t               divided padded relaxed>\n\t\t\n\t    {Array(this.state.numRows).fill().map((_, index) => this.getGridRow(index))}\n\t\t\n\t    </Grid>\n\t\t\n\t\t</div>\n\t)\t\n    }\n}\n\nexport default FlexGrid;\n\n// these are all our components that can go in a grid cell\nconst allComponents = { // map from component name to component\n\t    'EventList' : EventList,\n\t    'EventInput' : EventInput,\n    'Weather' : Weather,\n\t'WorldClock' : WorldClock,\n\t'Poetry' : Poetry,\n    'NoComponent' : NoComponent,\n\t'MMConnection' : MMConnection,\n\t'Otoken': Otoken\n\n}\n\n// user chooses component\nconst compsDropdown = [\n    {\n\t\n\ttext : \t    'EventList',\n\tkey : \t    'EventList',\n\tvalue: \t    'EventList',\n    },\n    {\n\ttext : \t    'Weather',\n\tkey : \t    'Weather',\n\tvalue :\t    'Weather',\n    },\n    {\n\ttext : \t    'EventInput',\n\tkey : \t    'EventInput',\n       value : \t    'EventInput',\n    },\n    {\n\ttext : \t    'Poetry',\n\tkey : \t    'Poetry',\n\tvalue :     'Poetry',\n    },\n    {\n\ttext : \t    'World Clock',\n\tkey : \t    'WorldClock',\n\tvalue :     'WorldClock',\n    },\n\t{\n\t\ttext: 'MetaMask',\n\t\tkey : 'MMConnection',\n\t\tvalue : 'MMConnection'\n\t},\n\t{text:\"Swap\",\n\tkey: 'Otoken',\n\tvalue: 'Otoken'\n\n\t}\n    ]\n\n\n\t    // for (i = 0;  < this.state.numRows){\n\t    //   this.getGridRow(i)\n\t    //  }\n\n\n// 3 rows 2 columns\n\n// <grid  col= ths.state.numCols rows = this.state.numRows   >\n\n// // getGridRow\n//     <g.r>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n\n// // getGridRow\n//    <g.r>\n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n\n// // getGridRow\n//     <g.r>\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n\n// // getGridItem    \n//     <g.c>\n//     <dyncomponent>\n//     </g.c>\n//    </g.r>\n\n// </grid>\n"]},"metadata":{},"sourceType":"module"}