{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/MMConnection.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Image } from 'semantic-ui-react';\nimport mmImg from \"../img/metamask.png\";\nimport { Button, Modal } from 'semantic-ui-react';\n\nclass Poetry extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasMM: false,\n      open: false,\n      btnPositive: true,\n      btnText: \"Connect MetaMask\",\n      btnDisabled: false\n    };\n  }\n\n  async componentDidMount() {\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n      this.setState({\n        hasMM: true\n      });\n\n      if (window.ethereum.isConnected()) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const account = accounts[0];\n        const fFive = account.splice(0, 4);\n        const lFive = acount.splice(-5);\n        const wAddress = `${fFive}...${lfIVE}`;\n        this.setState({\n          btnText: account\n        });\n        this.setState({\n          btnPositive: false\n        });\n        this.setState({\n          btnDisabled: true\n        });\n      }\n    }\n  }\n\n  async checkMMInstall(event) {\n    event.preventDefault();\n    console.log(this.state.hasMM);\n\n    if (this.state.hasMM === false) {\n      this.setState({\n        open: true\n      });\n    } else {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = accounts[0];\n      this.setState({\n        btnText: account\n      });\n      this.setState({\n        btnPositive: false\n      });\n      this.setState({\n        btnDisabled: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: mmImg,\n      size: \"small\",\n      circular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      onClose: () => this.setState({\n        open: false\n      }),\n      open: this.state.open,\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        positive: this.state.btnPositive,\n        disabled: this.state.btnDisabled,\n        onClick: this.checkMMInstall.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }\n      }, this.state.btnText),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 2\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Your don't have MetaMask Extension Installed\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      content: \"OK\",\n      labelPosition: \"right\",\n      icon: \"checkmark\",\n      onClick: () => this.setState({\n        open: false\n      }),\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default Poetry;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/MMConnection.js"],"names":["React","Image","mmImg","Button","Modal","Poetry","Component","state","hasMM","open","btnPositive","btnText","btnDisabled","componentDidMount","window","ethereum","console","log","setState","isConnected","accounts","request","method","account","fFive","splice","lFive","acount","wAddress","lfIVE","checkMMInstall","event","preventDefault","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Image } from 'semantic-ui-react'\nimport mmImg from \"../img/metamask.png\";\nimport { Button, Modal } from 'semantic-ui-react'\n\nclass Poetry extends React.Component {\n\n    state={\n        hasMM: false,\n        open:false,\n        btnPositive: true,\n        btnText: \"Connect MetaMask\",\n        btnDisabled: false\n    }\n\n    async componentDidMount(){\n        if (typeof window.ethereum !== 'undefined') {\n            console.log('MetaMask is installed!');\n            this.setState({hasMM: true})\n            if (window.ethereum.isConnected()){\n                const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n                const account = accounts[0];\n                const fFive = account.splice(0,4)\n                const lFive=acount.splice(-5)\n                const wAddress = `${fFive}...${lfIVE}`\n                this.setState({btnText:account})\n                this.setState({btnPositive:false})\n                this.setState({btnDisabled:true})\n            }\n          }\n     \n    }\n   async checkMMInstall(event){\n        event.preventDefault()\n        console.log(this.state.hasMM)\n        if(this.state.hasMM === false){\n            this.setState({open: true})\n        } else {\n           const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n           const account = accounts[0];\n          this.setState({btnText: account})\n          this.setState({btnPositive:false})\n          this.setState({btnDisabled:true})\n        }\n      \n    }\n\n    render(){\n        return(\n            <div>\n                {/* image from \"https://cdn.iconscout.com/icon/free/png-512/metamask-2728406-2261817.png\" */}\n                <Image src={mmImg} size='small' circular />\n                \n                <Modal\n      onClose={() => this.setState({open:false})}\n      open={this.state.open}\n      trigger={<Button positive={this.state.btnPositive} disabled={this.state.btnDisabled} onClick={this.checkMMInstall.bind(this)}>{this.state.btnText}</Button>}\n    >\n <Modal.Header>Error</Modal.Header>\n      <Modal.Content>\n    Your don't have MetaMask Extension Installed\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          content=\"OK\"\n          labelPosition='right'\n          icon='checkmark'\n          onClick={() => this.setState({open:false})}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  \n            </div>\n        )\n    }\n}\nexport default Poetry;"]},"metadata":{},"sourceType":"module"}