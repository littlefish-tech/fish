{"ast":null,"code":"var _jsxFileName = \"/Users/yimeng/Documents/fish/src/components/MMConnection.js\";\nimport React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Image } from 'semantic-ui-react';\nimport mmImg from \"../img/metamask.png\";\nimport { Button, Modal } from 'semantic-ui-react';\nimport { Icon } from 'semantic-ui-react';\nimport Web3 from \"web3\";\nimport Eth from \"web3-eth\";\nimport \"../App.css\";\nvar web3 = null;\n\nclass Poetry extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"MetaMask\",\n      titleColor: \"red\",\n      hasMM: false,\n      open: false,\n      btnPositive: true,\n      btnText: \"Connect MetaMask\",\n      btnDisabled: false,\n      chainId: \"\",\n      ethBal: \"\",\n      accountNum: \"\",\n      showAcctDetail: false\n    };\n  }\n\n  async componentDidMount() {\n    this.props.setTitle(this.state.title, this.state.titleColor);\n    this.props.noMenu(false);\n\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n      this.setState({\n        hasMM: true\n      }); // web3 = new Web3(Web3.givenProvider)\n      // console.log(web3)\n      // const acct = await web3.eth.getAccounts()\n      // console.log(acct)\n      // weenus adrs 0x101848D5C5bBca18E6b4431eEdF6B95E9ADF82FA\n      // const c = web3.eth.Contract(0x101848D5C5bBca18E6b4431eEdF6B95E9ADF82FA)\n      // console.log(c.address)\n\n      return; // if (window.ethereum.isConnected()){\n      //     const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      //     const account = accounts[0];\n      //     const fFive = account.slice(0,8)\n      //     const lFive=account.slice(-5)\n      //     const wAddress = `${fFive}...${lFive}`\n      //     this.setState({btnText:wAddress})\n      //     this.setState({btnPositive:false})\n      //     this.setState({btnDisabled:true})\n      // }\n    }\n  }\n\n  async checkMMInstall(event) {\n    event.preventDefault();\n    console.log(this.state.hasMM);\n\n    if (this.state.hasMM === false) {\n      this.setState({\n        open: true\n      });\n    } else {\n      await this.setState({\n        showAcctDetail: true\n      });\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = accounts[0];\n      const fFive = account.slice(0, 8);\n      const lFive = account.slice(-5);\n      const wAddress = `${fFive}...${lFive}`;\n      this.setState({\n        btnText: wAddress\n      });\n      this.setState({\n        btnPositive: false\n      });\n      this.setState({\n        btnDisabled: true\n      });\n      this.setState({\n        accountNum: wAddress\n      });\n      const chainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log(`the chainid is ${chainId}`);\n      const ethBal = await window.ethereum.request({\n        method: 'eth_getBalance',\n        params: [account, 'latest']\n      });\n      await this.setState({\n        chainId: chainId\n      });\n      await this.setState({\n        ethBal: ethBal\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: mmImg,\n      size: \"mini\",\n      circular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), this.state.showAcctDetail && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Chain ID: \", this.state.chainId), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"ETH: \", this.state.ethBal / 1000000000000000000), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"accoutNum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"purple\",\n      name: \"selected radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 50\n      }\n    }), this.state.accountNum)), /*#__PURE__*/React.createElement(Modal, {\n      onClose: () => this.setState({\n        open: false\n      }),\n      open: this.state.open,\n      trigger: !this.state.btnDisabled && /*#__PURE__*/React.createElement(Button, {\n        positive: this.state.btnPositive,\n        disabled: this.state.btnDisabled,\n        onClick: this.checkMMInstall.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 47\n        }\n      }, this.state.btnText),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 2\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, \"Your don't have MetaMask Extension Installed\"), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      content: \"OK\",\n      labelPosition: \"right\",\n      icon: \"checkmark\",\n      onClick: () => this.setState({\n        open: false\n      }),\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default Poetry;","map":{"version":3,"sources":["/Users/yimeng/Documents/fish/src/components/MMConnection.js"],"names":["React","Image","mmImg","Button","Modal","Icon","Web3","Eth","web3","Poetry","Component","state","title","titleColor","hasMM","open","btnPositive","btnText","btnDisabled","chainId","ethBal","accountNum","showAcctDetail","componentDidMount","props","setTitle","noMenu","window","ethereum","console","log","setState","checkMMInstall","event","preventDefault","accounts","request","method","account","fFive","slice","lFive","wAddress","params","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Image } from 'semantic-ui-react'\nimport mmImg from \"../img/metamask.png\";\nimport { Button, Modal } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport Web3 from \"web3\"\nimport Eth from \"web3-eth\"\nimport \"../App.css\"\n\nvar web3 = null\n\nclass Poetry extends React.Component {\n\n    state={\n        title: \"MetaMask\",\n        titleColor: \"red\",\n        hasMM: false,\n        open:false,\n        btnPositive: true,\n        btnText: \"Connect MetaMask\",\n        btnDisabled: false,\n        chainId:\"\",\n        ethBal:\"\",\n        accountNum:\"\",\n        showAcctDetail:false, \n\n    }\n\n    async componentDidMount(){\n        this.props.setTitle(this.state.title, this.state.titleColor)\n\t    this.props.noMenu(false)\n        if (typeof window.ethereum !== 'undefined') {\n            console.log('MetaMask is installed!');\n            this.setState({hasMM: true})\n            // web3 = new Web3(Web3.givenProvider)\n            // console.log(web3)\n            // const acct = await web3.eth.getAccounts()\n            // console.log(acct)\n            // weenus adrs 0x101848D5C5bBca18E6b4431eEdF6B95E9ADF82FA\n            // const c = web3.eth.Contract(0x101848D5C5bBca18E6b4431eEdF6B95E9ADF82FA)\n            // console.log(c.address)\n            return\n            // if (window.ethereum.isConnected()){\n            //     const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            //     const account = accounts[0];\n            //     const fFive = account.slice(0,8)\n            //     const lFive=account.slice(-5)\n            //     const wAddress = `${fFive}...${lFive}`\n            //     this.setState({btnText:wAddress})\n            //     this.setState({btnPositive:false})\n            //     this.setState({btnDisabled:true})\n            // }\n          }\n     \n    }\n   async checkMMInstall(event){\n        event.preventDefault()\n        console.log(this.state.hasMM)\n        if(this.state.hasMM === false){\n            this.setState({open: true})\n        } else {\n            await this.setState({showAcctDetail: true})\n           const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n           const account = accounts[0];\n           const fFive = account.slice(0,8)\n           const lFive=account.slice(-5)\n           const wAddress = `${fFive}...${lFive}`\n           this.setState({btnText:wAddress})\n          this.setState({btnPositive:false})\n          this.setState({btnDisabled:true})\n          this.setState({accountNum: wAddress})\n          const chainId = await window.ethereum.request({method: 'eth_chainId'})\n          console.log(`the chainid is ${chainId}`)\n          const ethBal = await window.ethereum.request({method: 'eth_getBalance', \n                                                         params: [account, 'latest']})\n            await this.setState({chainId: chainId})\n            await this.setState({ethBal:ethBal})\n        }\n      \n    }\n\n\n\n    render(){\n        return(\n            <div>\n                {/* image from \"https://cdn.iconscout.com/icon/free/png-512/metamask-2728406-2261817.png\" */}\n                <Image src={mmImg} size='mini' circular />\n                {\n                    (this.state.showAcctDetail) &&\n                    (<div>\n                        <p>Chain ID: {this.state.chainId}</p> \n                        <p>ETH: {this.state.ethBal/1000000000000000000}</p> \n                        <p className='accoutNum'><Icon color=\"purple\"name=\"selected radio\" />{this.state.accountNum}</p>\n                    </div>\n                        \n                     )\n                }\n                <Modal\n      onClose={() => this.setState({open:false})}\n      open={this.state.open}\n      trigger={ (!this.state.btnDisabled) && (<Button positive={this.state.btnPositive} disabled={this.state.btnDisabled} onClick={this.checkMMInstall.bind(this)}>{this.state.btnText}</Button>)}\n    >\n <Modal.Header>Error</Modal.Header>\n      <Modal.Content>\n    Your don't have MetaMask Extension Installed\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          content=\"OK\"\n          labelPosition='right'\n          icon='checkmark'\n          onClick={() => this.setState({open:false})}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  \n            </div>\n        )\n    }\n}\nexport default Poetry;"]},"metadata":{},"sourceType":"module"}