import React from 'react';
import 'semantic-ui-css/semantic.min.css'
import axios from 'axios';

import { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'

class LoginForm extends React.Component{

    state = { uname: null,
	        passwd: null }


    handleName=(event) => {
        this.setState({uname: event.target.value})
        console.log(this.state.uname)
    }        
    handlePw=(event) => {
        this.setState({passwd: event.target.value})
        console.log(this.state.passwd)
    }

    render(){
	return (
	<Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>
        <Grid.Column style={{ maxWidth: 450 }}>
        <Header as='h2' color='teal' textAlign='center'>
		Fish Login
	</Header>
	    <Form size='large' onSubmit = {this.props.handleSubmit} >
            <Segment stacked>
		<Form.Input fluid icon='user'
	    iconPosition='left' placeholder='UserName' type="text" 
	    value = {this.state.uname} onChange = {this.handleName}
	    
		/>
		<Form.Input fluid  icon='lock' iconPosition='left'
	    placeholder='Password' type='password' 
	    value = {this.state.passwd} onChange = {this.handlePw}
		/>

		<Button color='teal' fluid size='large'>
                   Login
             </Button>
            </Segment>
	    </Form>
	    </Grid.Column>
	    </Grid>
    )
    }
}

class Fish extends React.Component{
    // we receive curUser as a prop

    componentDidMount(){
	// axios.get("http://localhost:9999/users")
	//     .then(res => {
	// 	console.log(res.data)
	// 	let users = res.data
	// 	console.log(users)
	//     })
    }

    render(){
	return(
        <div>
		<Header as='h1'>Hello, my name is {this.props.curUser.name} </Header>
        </div>
	)	
    }
}

class App extends React.Component {
    state = {
	curUser : null
    }
   

    handleSubmit = (event) => {
	
	event.preventDefault();  // don't reload the page

	console.log(event)
	// make a network call for login
	// axios.post("http://localhost:9999/loginVerify",
	// 	   {
	// 	       uname: 
	// 	       passwd:
	// 	   })  // we need the username and password
        // .then(res => {                // and add it to the post
	//     console.log(res.data)  // this is what came back from babyServer
	//     // if we got something useful back
	//     // update this.state.curUser
	// })
    }

    render(){
	if (this.state.curUser == null){
	return (
        <div>
		<LoginForm handleSubmit = {this.handleSubmit}/>
	</div>
  )
}
	else{
	    return(
		    <div><Fish curUser= {this.state.curUser}/></div>
	    )	}	
    }
}

export default App;


  //   verifyLogin(){
	// // Axios call to the database
	// uname="fish1"
  //   }
